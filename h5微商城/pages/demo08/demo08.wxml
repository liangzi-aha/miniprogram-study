<!-- text：文本标签 
    长按文字复制 selectable
    对文本内容 进行 解码 decode -->
<text selectable="true" decode="{{true}}">text &nbsp;123</text>
<!-- image:图片标签
    1、默认宽高 320 * 240
    2、mode 决定图片内容如何 和 图片变迁宽高做适配
        1、scaleToFill 默认值 不包吃纵横缩放比例，使图片的宽高完全拉伸至填满image元素
        2、aspectFit：保持宽高比，确保长边填充满 -->
<image mode="aspectFit" src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fbpic.588ku.com%2Felement_origin_min_pic%2F16%2F10%2F29%2F2ac8e99273bc079e40a8dc079ca11b1f.jpg&refer=http%3A%2F%2Fbpic.588ku.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1634373306&t=f89f3d881a09bc596712c6b1f0b57469" />
<!-- swiper标签
    1、轮播图外层容器 swiper
    2、每个轮播项 swiper-item
    3、swiper 存在默认样式
        width 100% 
        height 150px
        image width 320 height 240
        swiper 无法被内容撑开
    4、 -->
<swiper autoplay="{{true}}" interval="1000" circular="{{true}}" indicator-dots="{{true}}" indicator-active-color="#fff">
    <swiper-item>
        <image mode="widthFix" src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/200530/40/8163/150425/613ef66bE36623dbf/a0c594959171c714.jpg!cr_1053x420_4_0!q70.jpg.dpg" />
    </swiper-item>
    <swiper-item>
        <image mode="widthFix" src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/121447/10/19508/109284/6141ab59E8697ce95/68c59c88af20010b.jpg!cr_1053x420_4_0!q70.jpg.dpg" />
    </swiper-item>
</swiper>
<!-- 导航组件 navigation
    1、url 可以是绝对路径 或 相对路径
    2、target 要跳转别的小程序或者当前的小程序
        self 默认值 自己 小程序的页面
        miniProgram 其他的小程序的页面
    3、open-type 跳转的方式
        1、navigate 保留当前页面跳转，不嫩跳转tabbar页面
        2、redirect 关闭当前页面，跳转页面，不能跳转tabbar页面
        3、switchTab: 跳转tabbar页面，并关闭其他所有非tabbar页面
        4、 reLaunch 关闭所有页面，跳转页面 -->
<navigator open-type="navigate" class="" target="" url="/pages/demo06/demo06">demo06</navigator>
<navigator open-type="redirect" class="" target="" url="/pages/demo07/demo07">demo07</navigator>
<navigator open-type="switchTab" class="" target="" url="/pages/index/index">跳转tabbar页面</navigator>
<navigator open-type="reLaunch" class="" target="" url="/pages/index/index">可以谁便跳</navigator>
<!-- rich-text 富文本标签
     1、nodes 属性来实现
        1、接收变迁字符串
        2、接收对象数组 -->
<rich-text nodes="{{html1}}"></rich-text>
<!-- button 标签
        1、外观的属性
            1、size 按钮打小
                1、size 默认打小
                2、mini 小尺寸
        2、type 用于修改按钮颜色
            1、primary default warn -->
<button type="primary">默认按钮</button>
<button size="mini" loading="{{true}}">mini默认按钮</button>
<!-- 
    botton 按钮的开放能力
         1、open-type 
         值	说明	最低版本
            1、contact	打开客服会话，如果用户在会话中点击消息卡片后返回小程序，可以从 bindcontact 回调中获得具体信息，具体说明 （小程序插件中不能使用）	1.1.0
            2、share	触发用户转发，使用前建议先阅读使用指引	1.2.0
            3、getPhoneNumber	获取用户手机号，可以从4、bindgetphonenumber回调中获取到用户信息，具体说明 （小程序插件中不能使用）	1.2.0
            5、getUserInfo	获取用户信息，可以从bindgetuserinfo回调中获取到用户信息 （小程序插件中不能使用）	1.3.0
            6、launchApp	打开APP，可以通过app-parameter属性设定向APP传的参数具体说明	1.9.5
            openSetting	打开授权设置页	2.0.7
            feedback	打开“意见反馈”页面，用户可提交反馈内容并上传日志，开发者可以登录小程序管理后台后进入左侧菜单“客服反馈”页面获取到反馈内容	
 -->
<button open-type="share">share</button>
<button open-type="contact">contact</button>
<button open-type="getPhoneNumber" bindgetphonenumber="getUserNumber">getPhoneNumber</button>
<button open-type="getUserInfo" bindgetuserinfo="getUserInfo">getUserInfo</button>
<button open-type="launchApp">launchApp</button>
<button open-type="openSetting">openSetting</button>
<button open-type="feedback">feedback</button>

<!-- 
    icon 标签
    1、小程序中的字体图标
        1、size: 图标打小
        2、color： 图标的颜色
 -->

 <icon type="success" size="23" color="#009542">
     
 </icon>


 <!-- 
     radio 单选框
     1、radio标签 必须要和 父元素 radio-group来使用
     2、value 选中的单选框的值
     3、需要给 radio-group 绑定 change 事件
     4、需要在页面中显示 选中的值
  -->

<radio-group bindchange="handleChange">
    <radio checked="{{true}}" value="male" color="red">
        男
    </radio>
      <radio  value="female">
        女
    </radio>
</radio-group>

<view>
    您选中的是：{{gender}}
</view>
  
  
<!-- 
    checkbox 标签
 -->

 <view>
    <checkbox-group bindchange="handleCheckBox">
        <checkbox wx:for="{{list}}" 
        wx:key="id"
        wx:for-item="value"
        wx:for-index="key"
        value="{{value.value}}"
        color="red">
            {{ value.name }}
        </checkbox>
    </checkbox-group>
 </view>

 <view>
     选中的水果：{{checkBoxValue}}
     <!-- <block wx:for="{{checkBoxValue}}" wx:key="*this" wx:for-item="value" wx:for-index="key">
         {{value}}
     </block> -->
       
 </view>
   
   
   